# I want port to be assigned automatically. so port 0.
# useful when having multiple instances of this app running diff ports.
#{port:0} either get from command line or set default 0 if not provided.
server.port=${port:0}
spring.application.name=users-webservice
# by which eureka client will communicate with eureka server.
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
# enable application to restart and redeploy when java code is changed.
spring.devtools.restart.enabled=true
#generate id for each instance of this app. hence enabling all instance to get registered with eureka server
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#my own property where zuul is running and only allowing this microservice to be accessible only thru this ip gateway.
# environment variable to fetch this from here and use it inside websecurity class.
#gateway.ip=192.168.43.254

##### h2 database configuration
# to enable browser base h2 console to login and browser thru db structure and run sql queries manually.
# h2 console window is present at "/h2-console" path
spring.h2.console.enabled=true
#h2 db has own firewall. since our request is go thru zuul api, we need enable connections from other addresses.
spring.h2.console.settings.web-allow-others=true
spring.datasource.url=jdbc:h2:mem:testdb

